- name: Delete root pw file /root/.pw (if present)
  file:
    path: /root/.pw
    state: absent

- name: Add deploy user
  user:
    name: "{{harden_linux_deploy_user}}"
    password: "{{harden_linux_deploy_user_password}}"
    uid: "{{harden_linux_deploy_user_uid}}"
    shell: "{{harden_linux_deploy_user_shell}}"
    home: "{{harden_linux_deploy_user_home}}"
  tags:
    - user

- name: Add authorized keys for deploy user
  authorized_key:
    user: "{{harden_linux_deploy_user}}"
    key: "{{lookup('file', item)}}"
  with_items:
    - "{{harden_linux_deploy_user_public_keys}}"
  when: harden_linux_deploy_user_public_keys is defined
  tags:
    - user

- name: Add deploy user to sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: "{{harden_linux_deploy_user}} ALL"
    line: "{{harden_linux_deploy_user}} ALL=(ALL) NOPASSWD:ALL"
    state: present
  tags:
    - user
    - sudo

- include_tasks: install.deb.yml
  when: ansible_os_family == 'Debian'

- include_tasks: install.yum.yml
  when: ansible_os_family == 'RedHat'

- name: Combine harden_linux_sshd_settings and harden_linux_sshd_settings_user (if defined)
  set_fact:
    harden_linux_sshd_settings: "{{harden_linux_sshd_settings | combine(harden_linux_sshd_settings_user|default({})) }}"
  tags:
    - ssh

- name: Ensure sshd_config setting
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{item}}"
    line: "{{harden_linux_sshd_settings[item]}}"
    state: "present"
  notify: "restart ssh"
  with_items:
    - "{{harden_linux_sshd_settings | list}}"
  tags:
    - ssh

- name: Combine harden_linux_sysctl_settings and harden_linux_sysctl_settings_user (if defined)
  set_fact:
    harden_linux_sysctl_settings: "{{harden_linux_sysctl_settings | combine(harden_linux_sysctl_settings_user|default({})) }}"
  tags:
    - sysctl

- name: Sysctl settings
  sysctl:
    name: "{{item}}"
    value: "{{harden_linux_sysctl_settings[item]}}"
    sysctl_set: yes
  with_items:
    - "{{harden_linux_sysctl_settings | list}}"
  tags:
    - sysctl

- include_tasks: ufw.yml
  when: harden_linux_ufw_use


- name: Update Sshguard white list
  lineinfile:
    dest: /etc/sshguard/whitelist
    regexp: "^{{item}}"
    line: "{{item}}"
    state: present
  with_items:
    - "{{harden_linux_sshguard_whitelist}}"
  when: harden_linux_sshguard_use
  tags:
    - sshguard

- name: Change root password
  user:
    name: "root"
    password: "{{harden_linux_root_password}}"
  when: harden_linux_root_password is defined
  tags:
    - user
